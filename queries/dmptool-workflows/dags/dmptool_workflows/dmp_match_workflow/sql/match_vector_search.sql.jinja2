CREATE TEMP FUNCTION calculate_vector_weighted_count(
  weighted_count FLOAT64,
  norm_distance FLOAT64
) RETURNS FLOAT64 AS (
  weighted_count + COALESCE(norm_distance, 0) * 5
);

CREATE OR REPLACE TABLE `{{ match_table_id }}` AS

WITH distances AS (
  SELECT DISTINCT dmp_doi, match_doi, distance
  FROM (
    SELECT
      query.doi AS dmp_doi,
      base.doi AS match_doi,
      distance,
    FROM VECTOR_SEARCH(
      (SELECT * FROM `{{ match_embeddings_table_id }}` WHERE ARRAY_LENGTH(ml_generate_embedding_result) > 0),
      'ml_generate_embedding_result',
      (SELECT * FROM `{{ dmps_embeddings_table_id }}` WHERE ARRAY_LENGTH(ml_generate_embedding_result) > 0),
      top_k =>-1,
      distance_type => 'COSINE',
      options => '{"use_brute_force":true}'
    )
  )
  ORDER BY dmp_doi, distance DESC
),

matches AS (
  SELECT
    match_intermediate.dmp_doi,
    ARRAY_AGG(
      STRUCT(
        match.match_doi,
        dataset.biblio_data,
        dataset.match_data,
        STRUCT(
          match.grant_id_count,
          match.funder_opportunity_id_count,
          match.person_id_count,
          match.funder_id_count,
          match.affiliation_id_count,
          match.person_name_count,
          match.funder_name_count,
          match.affiliation_name_count,
          match.weighted_count,
          calculate_vector_weighted_count(match.weighted_count, distances.distance) AS vector_weighted_count
        ) AS counts
      )
      ORDER BY calculate_vector_weighted_count(match.weighted_count, distances.distance) DESC
    ) AS matches
  FROM `{{ match_intermediate_table_id }}` AS match_intermediate, UNNEST(match_intermediate.matches) AS match
  LEFT JOIN distances ON distances.dmp_doi = match_intermediate.dmp_doi AND distances.match_doi = match.match_doi
  LEFT JOIN `{{ match_norm_table_id }}` AS dataset ON dataset.doi = match.match_doi
  GROUP BY match_intermediate.dmp_doi
)

SELECT
  matches.dmp_doi,
  STRUCT(
    dmps.doi,
    dmps.content,
    dmps.project_start,
    dmps.project_end,
    dmps.affiliations,
    dmps.affiliation_ids,
    dmps.funders,
    dmps.funder_ids,
    dmps.funder_opportunity_ids,
    dmps.grant_ids,
    dmps.people,
    dmps.people_ids
  ) AS dmp,
  matches.matches,
FROM matches
LEFT JOIN `{{ dmps_norm_table_id }}` AS dmps ON dmps.doi = matches.dmp_doi
